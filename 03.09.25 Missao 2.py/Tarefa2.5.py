# ================================================================================
# TAREFA 5:  -   APRENDIZADO POR REFOR칂O: O PERSONAGEM COMIL츾O
# Objetivo: Entender o loop b치sico de intera칞칚o do RL (A칞칚o -> Recompensa).
# ================================================================================

import time

# --- CONFIGURA칂츾O DO AMBIENTE ---
POSICAO_COMIDA = 4
LINHA_TOTAL = 5  # Total de posi칞칫es da linha

def visualizar_comilao(posicao_agente, recompensa_total):
    """Mostra a linha com o agente (游냤) e a comida (游꼤)"""
    linha = ['-'] * LINHA_TOTAL
    if posicao_agente >= LINHA_TOTAL:
        posicao_agente = LINHA_TOTAL - 1
    linha[posicao_agente] = '游냤'   # Agente
    linha[POSICAO_COMIDA] = '游꼤'   # Comida
    print(" ".join(linha) + f"   Recompensa: {recompensa_total}")

def simular_comilao_automatico(posicao_inicial=0, max_passos=10):
    posicao_agente = posicao_inicial
    recompensa_total = 0

    print("--- Simula칞칚o Autom치tica do Agente Comil칚o ---\n")
    visualizar_comilao(posicao_agente, recompensa_total)
    print("-" * 30)

    for passo in range(max_passos):
        print(f"Passo {passo + 1}:")
        
        # A칞칚o autom치tica: mover sempre para a direita
        acao_agente = 'direita'
        print(f"   -> A칞칚o do Agente: '{acao_agente}'")

        # Atualiza posi칞칚o e calcula custo
        posicao_agente += 1
        recompensa = -1  # custo do passo

        # Verifica se chegou na comida
        if posicao_agente >= POSICAO_COMIDA:
            recompensa += 20
            print(f"游냤 Agente alcan칞ou a comida! Recompensa extra: +20 pontos!")
            recompensa_total += recompensa
            visualizar_comilao(posicao_agente, recompensa_total)
            break

        # Atualiza recompensa total e mostra visualiza칞칚o
        recompensa_total += recompensa
        visualizar_comilao(posicao_agente, recompensa_total)

        time.sleep(0.5)

    print("-" * 30)
    print(f"Recompensa total acumulada pelo agente: {recompensa_total} pontos.\n")

# --- Executar simula칞칚o autom치tica ---
simular_comilao_automatico()




      